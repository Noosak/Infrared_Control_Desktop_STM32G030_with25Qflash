#ifndef  __DRIVER_KEY_H__
#define  __DRIVER_KEY_H__

#include "main.h"

/******************************************************************************
 *                              定义按键键值
*******************************************************************************/
#define KEY_VALUE_NONE      0
#define KEY_VALUE_1         1
#define KEY_VALUE_2         2
#define KEY_VALUE_3         3
#define KEY_VALUE_4         4
#define KEY_VALUE_5         5
#define KEY_VALUE_6         6
#define KEY_VALUE_TEST      7

/******************************************************************************
 *                           定义按键扫描时间常量
*******************************************************************************/
#define KEY_XD_DL           2               //按键初按消抖延时常数：10ms*2=20ms
#define KEY_LJ_DL           15              //连击响应延时常数：10ms*15=150ms
#define KEY_CJ_DL           60              //长击响应延时常数：20ms+10ms*60=0.62s

/******************************************************************************
 *                             定义按键事件类型
*******************************************************************************/
typedef struct
{
    uint8_t even_short_release;             //短击释放后响应事件
    uint8_t even_short_confirm;             //短击立即响应事件
    uint8_t even_continue;                  //持续按键的连击响应事件
    uint8_t even_long_confirm;              //长击立即响应事件
} KEY_EVEN;

/******************************************************************************
 *                              外部变量声明
*******************************************************************************/
extern uint8_t key_lj_valid_flag;

extern KEY_EVEN key_1, key_2, key_3, key_4, key_5, key_6, key_test;

/******************************************************************************
 *                              外部函数声明
*******************************************************************************/
extern void key_clear_evens(KEY_EVEN *key_p);
extern void key_init(void);
extern void key_scan_task(void);

#endif
